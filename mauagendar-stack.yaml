apiVersion: v1
kind: Service
metadata:
  name: rabbitmq
spec:
  selector:
    app: rabbitmq
  ports:
    - name: rabbitmq
      port: 5672
      targetPort: 5672
    - name: rabbitmq-management
      port: 15672
      targetPort: 15672

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq
  template:
    metadata:
      labels:
        app: rabbitmq
    spec:
      containers:
        - name: rabbitmq
          image: rabbitmq:3.9-management-alpine
          ports:
            - containerPort: 5672
            - containerPort: 15672

---

apiVersion: v1
kind: Service
metadata:
  name: auth
spec:
  selector:
    app: auth
  ports:
    - name: auth
      port: 5050
      targetPort: 5050

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: auth
spec:
  replicas: 1
  selector:
    matchLabels:
      app: auth
  template:
    metadata:
      labels:
        app: auth
    spec:
      containers:
        - name: auth
          image: mauagendar-auth:latest
          ports:
            - containerPort: 5050
          env:
            - name: AUTH_PORT
              value: "5050"
            - name: SECRET_KEY
              value: BATMAN
            - name: PG_HOST
              value: postgres
            - name: PG_USER
              value: "postgres"
            - name: PG_PASSWORD
              value: "postgres"
            - name: PG_DATABASE
              value: "mauagendar"
            - name: PG_PORT
              value: "5432"


---

apiVersion: v1
kind: Service
metadata:
  name: calendar
spec:
  selector:
    app: calendar
  ports:
    - name: calendar
      port: 5000
      targetPort: 5000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: calendar
spec:
  replicas: 1
  selector:
    matchLabels:
      app: calendar
  template:
    metadata:
      labels:
        app: calendar
    spec:
      containers:
        - name: calendar
          image: mauagendar-calendar:latest
          ports:
            - containerPort: 5000
          env:
            - name: CALENDAR_PORT
              value: "5000"
            - name: PG_HOST
              value: postgres
            - name: PG_USER
              value: "postgres"
            - name: PG_PASSWORD
              value: "postgres"
            - name: PG_DATABASE
              value: "mauagendar"
            - name: PG_PORT
              value: "5432"

---

apiVersion: v1
kind: Service
metadata:
  name: postgres
spec:
  selector:
    app: postgres
  ports:
    - name: postgres
      port: 5432
      targetPort: 5432

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:latest
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_HOST
              value: postgres
            - name: POSTGRES_USER
              value: "postgres"
            - name: POSTGRES_PASSWORD
              value: "postgres"
            - name: POSTGRES_DB
              value: "mauagendar"
          volumeMounts:
            - name: pgdata
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command:
                - sh
                - -c
                - pg_isready -U postgres
            initialDelaySeconds: 10
            periodSeconds: 10
            timeoutSeconds: 5
            successThreshold: 1
            failureThreshold: 5
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata

---

apiVersion: v1
kind: Service
metadata:
  name: frontend
spec:
  selector:
    app: frontend
  ports:
    - name: frontend
      port: 3000
      targetPort: 3000

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
        - name: frontend
          image: mauagendar-frontend:latest
          ports:
            - containerPort: 3000
