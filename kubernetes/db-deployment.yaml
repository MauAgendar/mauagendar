apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert -f docker-compose.yml
    kompose.version: 1.31.0 (a04ecdb9e)
  creationTimestamp: null
  labels:
    io.kompose.service: db
  name: db
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: db
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert -f docker-compose.yml
        kompose.version: 1.31.0 (a04ecdb9e)
      creationTimestamp: null
      labels:
        io.kompose.network/mauagendar-app-network: "true"
        io.kompose.service: db
    spec:
      containers:
        - env:
            - name: POSTGRES_DATABASE
              value: postgres
            - name: POSTGRES_HOST
              value: db
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_PORT
              value: "5432"
            - name: POSTGRES_USER
              value: postgres
          image: postgres:latest
          livenessProbe:
            exec:
              command:
                ["psql", "--password", "postgres", "-U", "postgres", "-d","postgres" , "-c", "SELECT 1"]
            failureThreshold: 5
            periodSeconds: 10
            timeoutSeconds: 5
          name: db
          ports:
            - containerPort: 5432
              hostPort: 5432
              protocol: TCP
          resources: {}
          volumeMounts:
            - mountPath: /var/lib/postgresql/data
              name: pgdata
            - mountPath: /docker-entrypoint-initdb.d/create_tables.sql
              name: db-claim1
      restartPolicy: Always
      volumes:
        - name: pgdata
          persistentVolumeClaim:
            claimName: pgdata
        - name: db-claim1
          persistentVolumeClaim:
            claimName: db-claim1

status: {}
